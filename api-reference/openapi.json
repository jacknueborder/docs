{
    "openapi": "3.0.0",
    "info": {
        "description": "Validate, store, and query compliance carbon data.",
        "title": "NueBorder API",
        "termsOfService": "https://nueborder.com/terms/",
        "contact": {
            "name": "Jack Dunlap",
            "url": "https://nueborder.com/support",
            "email": "support@nueborder.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "paths": {
        "/v1/companies": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a list of all companies.",
                "tags": [
                    "Company"
                ],
                "summary": "List Companies",
                "responses": {
                    "200": {
                        "description": "List of companies retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.ListCustomerResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/companies/{company_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a company based on the provided company ID.",
                "tags": [
                    "Company"
                ],
                "summary": "Get Company",
                "parameters": [
                    {
                        "description": "Unique identifier for the company",
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.GetCustomerResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid company ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.JSONPayloadErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/companies/{company_id}/forecast": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Fetches the carbon-tax forecast data for a customer on the provided company ID.",
                "tags": [
                    "Forecast"
                ],
                "summary": "Get Forecast Data",
                "parameters": [
                    {
                        "description": "Unique identifier of the company",
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Forecast data successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: missing or invalid company ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.JSONPayloadErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error: unable to retrieve forecast data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adjusts the forecast settings for carbon-tax calculations using the provided configuration.",
                "tags": [
                    "Forecast"
                ],
                "summary": "Update Forecast Settings",
                "parameters": [
                    {
                        "description": "Unique identifier of the company",
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/models.ForecastSetting"
                            }
                        }
                    },
                    "description": "Forecast settings configuration",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Forecast settings updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid forecast settings provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.JSONPayloadErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/companies/{company_id}/reports": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Generates a new report ID and creates an entry in the database for the general report based on the company ID.",
                "tags": [
                    "General Report"
                ],
                "summary": "Create General Report",
                "parameters": [
                    {
                        "example": "\"12345\"",
                        "description": "Company ID for which the report is created",
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created the general report\" example({\"status\": \"created\", \"message\": \"Report created successfully\", \"data\": {\"report_id\": \"generated-uuid\"}})",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Occurs when the company_id is missing in the URL\" example({\"status\": \"error\", \"message\": \"Missing company ID\"})",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.JSONPayloadErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error while creating the report\" example({\"status\": \"error\", \"message\": \"Internal server error\"})",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/companies/{company_id}/reports/upload/excel": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Upload an Excel EU CBAM report file and returns the newly generated report ID.",
                "tags": [
                    "Files"
                ],
                "summary": "Upload Excel",
                "parameters": [
                    {
                        "description": "Unique identifier for the company",
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "description": "Excel report file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "required": [
                                    "file"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Report created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid file upload request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.JSONPayloadErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error processing Excel file upload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/companies/{company_id}/reports/upload/xml": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Upload an EU CBAM XML report file and returns the newly generated report ID.",
                "tags": [
                    "Files"
                ],
                "summary": "Upload XML",
                "parameters": [
                    {
                        "description": "Unique identifier for the company",
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "description": "XML report file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "required": [
                                    "file"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Report created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid file upload request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.JSONPayloadErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error processing XML file upload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/companies/{company_id}/reports/{report_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves general report information from the database based on URL params :company_id and :report_id.",
                "tags": [
                    "General Report"
                ],
                "summary": "Get General Report",
                "parameters": [
                    {
                        "example": "\"12345\"",
                        "description": "Company ID associated with the general report",
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "\"67890\"",
                        "description": "Report ID associated with the general report",
                        "name": "report_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved general report information\" example({\"status\": \"success\", \"data\": {...}})",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/flat.QReportType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Occurs when the company_id or report_id is missing or invalid\" example({\"status\": \"error\", \"message\": \"Invalid parameters\"})",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.JSONPayloadErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal database error, possibly due to network or data integrity issues\" example({\"status\": \"error\", \"message\": \"Internal server error\"})",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Inserts or updates a general report's information in the database based on URL params :company_id, :report_id, and the provided payload.",
                "tags": [
                    "General Report"
                ],
                "summary": "Update General Report",
                "parameters": [
                    {
                        "example": "\"12345\"",
                        "description": "Company ID associated with the general report",
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "\"67890\"",
                        "description": "Report ID associated with the general report",
                        "name": "report_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/flat.QReportType"
                            }
                        }
                    },
                    "description": "General report information payload",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "General report information successfully updated\" example({\"status\": \"success\", \"message\": \"Updated successfully\", \"data\": {...}})",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Occurs when the JSON payload is missing or malformed\" example({\"status\": \"error\", \"message\": \"Invalid JSON payload\"})",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.JSONPayloadErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error in the provided payload, such as missing required fields\" example({\"status\": \"error\", \"message\": \"Validation error\", \"errors\": {...}})",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal database error, possibly due to network or data integrity issues\" example({\"status\": \"error\", \"message\": \"Internal server error\"})",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/companies/{company_id}/reports/{report_id}/goods/emissions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves goods emissions data for the specified company and report.",
                "tags": [
                    "Good Emissions"
                ],
                "summary": "Get Emissions",
                "parameters": [
                    {
                        "description": "Unique identifier for the company associated with the goods emissions",
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Unique identifier for the report associated with the goods emissions",
                        "name": "report_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goods emissions data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.GetImportedGoodsEmissionsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid company_id or report_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.JSONPayloadErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving goods emissions data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing record or inserts new goods emissions data for the specified company and report.",
                "tags": [
                    "Good Emissions"
                ],
                "summary": "Update Emissions",
                "parameters": [
                    {
                        "description": "Unique identifier for the company associated with the goods emissions",
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Unique identifier for the report associated with the goods emissions",
                        "name": "report_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/flat.GoodsEmissionsType"
                            }
                        }
                    },
                    "description": "Goods emissions data",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated or inserted goods emissions data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid company_id or report_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.JSONPayloadErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error updating/inserting goods emissions data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/companies/{company_id}/reports/{report_id}/goods/params": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves parameters for imported goods in an EU CBAM report using the specified company and report IDs.",
                "tags": [
                    "Emissions Goods"
                ],
                "summary": "Get Parameters",
                "parameters": [
                    {
                        "description": "Unique identifier for the company associated with the imported goods parameters",
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Unique identifier for the report associated with the imported goods parameters",
                        "name": "report_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Imported goods parameters retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.GetProdMethodQualifyingParamsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid company_id or report_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.JSONPayloadErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving imported goods parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates or inserts parameters for imported goods in an EU CBAM report based on the provided company and report IDs.",
                "tags": [
                    "Emissions Goods"
                ],
                "summary": "Update Parameters",
                "parameters": [
                    {
                        "description": "Unique identifier for the company associated with the imported goods parameters",
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Unique identifier for the report associated with the imported goods parameters",
                        "name": "report_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/flat.QualifyingParametersType"
                            }
                        }
                    },
                    "description": "Payload containing imported goods parameters",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated or inserted imported goods parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid company_id or report_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.JSONPayloadErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error updating/inserting imported goods parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/companies/{company_id}/reports/{report_id}/goods/quantity": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves imported goods quantity data for the specified company and report.",
                "tags": [
                    "Goods Quantity"
                ],
                "summary": "Get Quantity",
                "parameters": [
                    {
                        "description": "Company ID associated with the goods quantity data",
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Report ID associated with the goods quantity data",
                        "name": "report_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goods quantity data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.GetImportedGoodsQuantityResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid company_id or report_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.JSONPayloadErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving goods quantity data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing record or inserts new imported goods quantity data for the specified company and report.",
                "tags": [
                    "Goods Quantity"
                ],
                "summary": "Update Quantity",
                "parameters": [
                    {
                        "description": "Company ID associated with the goods quantity data",
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Report ID associated with the goods quantity data",
                        "name": "report_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/flat.ImportedQuantityType"
                            }
                        }
                    },
                    "description": "Imported goods quantity data payload",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated or inserted goods quantity data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid company_id or report_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.JSONPayloadErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error updating/inserting goods quantity data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/companies/{company_id}/reports/{report_id}/imported-good": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves the details of an imported good based on the provided company ID and report ID.",
                "tags": [
                    "Imported Good"
                ],
                "summary": "Get Good",
                "parameters": [
                    {
                        "description": "Unique identifier for the company associated with the imported good",
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Unique identifier for the report associated with the imported good",
                        "name": "report_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the imported good",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.GetImportedGoodsGeneralResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request is missing or contains an invalid company_id or report_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.JSONPayloadErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while retrieving the imported good",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing imported good record or creates a new one using the provided company ID and report ID. The request body must include a valid JSON payload describing the imported good.",
                "tags": [
                    "Imported Good"
                ],
                "summary": "Update Good",
                "parameters": [
                    {
                        "description": "Unique identifier for the company associated with the imported good",
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Unique identifier for the report associated with the imported good",
                        "name": "report_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/flat.ImportedGoodType"
                            }
                        }
                    },
                    "description": "JSON payload containing the imported good data",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The imported good was updated or inserted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request is missing or contains invalid parameters or payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.JSONPayloadErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while updating/inserting the imported good",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new imported good record using the company ID and report ID provided in the route parameters.",
                "tags": [
                    "Imported Good"
                ],
                "summary": "New Good",
                "parameters": [
                    {
                        "description": "Unique identifier for the company associated with the imported good",
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Unique identifier for the report associated with the imported good",
                        "name": "report_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The imported good was created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request is missing or contains an invalid company_id or report_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.JSONPayloadErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while creating the imported good",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/companies/{company_id}/reports/{report_id}/items/{item_id}/documents": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves the documents for an imported good based on the provided company ID, report ID, and item ID.",
                "tags": [
                    "Documents"
                ],
                "summary": "Get Document",
                "parameters": [
                    {
                        "description": "Unique identifier for the company associated with the imported good documents",
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Unique identifier for the report associated with the imported good documents",
                        "name": "report_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Unique identifier for the item associated with the imported good documents",
                        "name": "item_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Documents retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid company_id, report_id, or item_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.JSONPayloadErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving imported good documents",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing record or inserts new documents for an imported good based on the provided company ID, report ID, and item ID. The request body must include a valid JSON payload describing the supporting documents.",
                "tags": [
                    "Documents"
                ],
                "summary": "Update Document",
                "parameters": [
                    {
                        "description": "Unique identifier for the company associated with the imported good documents",
                        "name": "company_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Unique identifier for the report associated with the imported good documents",
                        "name": "report_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Unique identifier for the item associated with the imported good documents",
                        "name": "item_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/flat.SupportingDocumentsType"
                            }
                        }
                    },
                    "description": "Payload for supporting documents",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated or inserted imported good documents",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid company_id, report_id, or item_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.JSONPayloadErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error updating/inserting imported good documents",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://nueborder.com/openapi/"
    },
    "servers": [
        {
            "url": "//nueborder.com/api/v1"
        }
    ],
    "components": {
        "securitySchemes": {
            "BearerAuth": {
                "description": "Provide your Bearer token in the format: Bearer <token>",
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        },
        "schemas": {
            "flat.ContactDetailsType": {
                "description": "Summary of Struct",
                "type": "object",
                "required": [
                    "email",
                    "name",
                    "phone"
                ],
                "properties": {
                    "email": {
                        "description": "The email of the person that is assigned in the contact details of the operator. (Min Length: 1, Max Length: 256)",
                        "type": "string",
                        "example": "OP04-0001@cbam.com"
                    },
                    "name": {
                        "description": "The full name (person or company) of the Declarant. (Min Length: 1, Max Length: 70)",
                        "type": "string",
                        "example": "OP04-0001 Contact name"
                    },
                    "phone": {
                        "description": "The phone number of the person that is assigned in the contact details of the operator. (Min Length: 1, Max Length: 35)",
                        "type": "string",
                        "example": "901234567"
                    }
                }
            },
            "flat.GoodsEmissionsType": {
                "description": "Summary of Struct",
                "type": "object",
                "required": [
                    "applicable_reporting_type_methodology",
                    "determination_type",
                    "direct_emissions_measurement_unit",
                    "electricity_source",
                    "indirect_emissions_measurement_unit",
                    "item_number",
                    "produced_measure_measurement_unit",
                    "specific_embedded_emissions"
                ],
                "properties": {
                    "applicable_reporting_type_methodology": {
                        "description": "The type of applicable reporting methodology used to calculate the emissions of the CBAM Good while being produced. (Min Length: 1, Max Length: 5)",
                        "type": "string",
                        "example": "TOM02"
                    },
                    "companyID": {
                        "description": "Company identifier",
                        "type": "integer"
                    },
                    "createdAt": {
                        "description": "Creation time",
                        "type": "string"
                    },
                    "determination_type": {
                        "description": "The type of determination of the indirect embedded emissions. The possible values are: Actual data, Default value. (Min Length: 1, Max Length: 5)",
                        "type": "string",
                        "example": "01"
                    },
                    "direct_emissions_measurement_unit": {
                        "description": "The type of measurement unit of the quantity of the CBAM Good. (Min Length: 1, Max Length: 5)",
                        "type": "string",
                        "example": "EMU1"
                    },
                    "electricity_source": {
                        "description": "(Min Length: 1, Max Length: 5)",
                        "type": "string",
                        "example": "SOE03"
                    },
                    "indirect_emissions_measurement_unit": {
                        "description": "The type of measurement unit of the quantity of the CBAM Good. (Min Length: 1, Max Length: 5)",
                        "type": "string",
                        "example": "EMU1"
                    },
                    "installation": {
                        "description": "()",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/flat.InstallationType"
                            }
                        ]
                    },
                    "installation_operator": {
                        "description": "()",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/flat.InstallationOperatorType"
                            }
                        ]
                    },
                    "internalReportID": {
                        "description": "Internal report ID",
                        "type": "integer"
                    },
                    "item_number": {
                        "description": "Import Good Item Number, sequencial This element specifies the number of every CBAM Good emission. It is a sequential number starting at 1. (1,2..)",
                        "type": "string",
                        "example": "1"
                    },
                    "organizationID": {
                        "description": "Organization identifier",
                        "type": "integer"
                    },
                    "produced_measure_measurement_unit": {
                        "description": "The type of measurement unit of the quantity of the CBAM Good. The type of measurement unit of the quantity of the CBAM Good. The type of measurement unit of the quantity of the CBAM Good. (Min Length: 1, Max Length: 5)",
                        "type": "string",
                        "example": "01"
                    },
                    "remarks_emissions": {
                        "description": "(max-occurs=9)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/flat.RemarksEmissionsType"
                        }
                    },
                    "sequence_number": {
                        "description": "This element specifies the number of every CBAM Good emission. It is a sequential number starting at 1. (Pattern: \\d{1,5})",
                        "type": "integer",
                        "example": 1
                    },
                    "specific_embedded_emissions": {
                        "description": "This is the element to declare the emissions per measurement unit of the product produced.  When editable, it is a possibility to enter the default values made available and published by the commission.  When automatically calculated, the value of this element is the result of the following formula:  Electricity consumed (MWh/measurement unit of CBAM Good) * emissions factor (Tonnes CO2/MWh) (Total Digits: 16, Fraction Digits: 7)",
                        "type": "number",
                        "example": 10
                    },
                    "updatedAt": {
                        "description": "Last update time",
                        "type": "string"
                    },
                    "updatedBy": {
                        "description": "Updater identifier",
                        "type": "string"
                    },
                    "version": {
                        "description": "Report Versions",
                        "type": "string"
                    }
                }
            },
            "flat.ImportedGoodType": {
                "description": "Summary of Struct",
                "type": "object",
                "required": [
                    "additional_information",
                    "cn_code",
                    "description",
                    "hs_code",
                    "importer_address_city",
                    "importer_address_country",
                    "importer_identification_number",
                    "importer_name",
                    "measurement_unit",
                    "origin_country",
                    "representative_address_city",
                    "representative_address_country",
                    "representative_identification_number",
                    "representative_name"
                ],
                "properties": {
                    "additional_information": {
                        "description": "Additional Information Additional Information (Min Length: 1, Max Length: 512)",
                        "type": "string",
                        "example": "Goods' additional information"
                    },
                    "cn_code": {
                        "description": "This is the CN Code of the CBAM Good. It is a 2-digit code that is added in the HS code. (Min Length: 8, Max Length: 8)",
                        "type": "string",
                        "example": "76090000"
                    },
                    "companyID": {
                        "description": "Company identifier",
                        "type": "integer"
                    },
                    "createdAt": {
                        "description": "Creation time",
                        "type": "string"
                    },
                    "description": {
                        "description": "This is an element that can be used in order to describe the CBAM Good. (Min Length: 1, Max Length: 512)",
                        "type": "string",
                        "example": "Aluminium tube or pipe fittings (for example, couplings, elbows, sleeves)"
                    },
                    "hs_code": {
                        "description": "(Min Length: 6, Max Length: 6)",
                        "type": "string",
                        "example": "760900"
                    },
                    "importer_address_city": {
                        "description": "The city where the Declarant is located. The city where the Declarant is located. The city where the importer is located. The city where the Declarant is located. The city where the importer is located. The city where the operator is located. (Min Length: 1, Max Length: 35)",
                        "type": "string",
                        "example": "Declarant city"
                    },
                    "importer_address_country": {
                        "description": "The country where the Declarant is established The country where the Indirect customs representative is established The country where the Importer is established The country where the Indirect customs representative is established The country where the Importer is established (either a Member state of the EU or a third country). (either a Member state of the EU or a third country). (Min Length: 2, Max Length: 2)",
                        "type": "string",
                        "example": "BE"
                    },
                    "importer_identification_number": {
                        "description": "The Importer's Economic Operators Registration and Identification The Importer's Economic Operators Registration and Identification (EORI) Number (EORI) Number (Min Length: 1, Max Length: 17)",
                        "type": "string",
                        "example": "GR293847584930295"
                    },
                    "importer_name": {
                        "description": "The full name The full name (person or company) of the importer. (person or company) of the importer. (Min Length: 1, Max Length: 70)",
                        "type": "string",
                        "example": "Declarant CBAM"
                    },
                    "internalReportID": {
                        "description": "Internal report ID",
                        "type": "integer"
                    },
                    "item_number": {
                        "description": "This element specifies the item number of every CBAM Good imported of the CBAM Report. It is a sequential number starting at 1. (Pattern: \\d{1,5})",
                        "type": "integer",
                        "example": 1
                    },
                    "measurement_unit": {
                        "description": "The type of measurement unit of the quantity of the CBAM Good. The type of measurement unit of the quantity of the CBAM Good. The type of measurement unit of the quantity of the CBAM Good. (Min Length: 1, Max Length: 5)",
                        "type": "string",
                        "example": "01"
                    },
                    "organizationID": {
                        "description": "Organization identifier",
                        "type": "integer"
                    },
                    "origin_country": {
                        "description": "The two letter code of a country. (Min Length: 2, Max Length: 2)",
                        "type": "string",
                        "example": "TR"
                    },
                    "representative_address_city": {
                        "description": "The city where the Declarant is located. The city where the Declarant is located. The city where the importer is located. The city where the Declarant is located. The city where the importer is located. The city where the operator is located. (Min Length: 1, Max Length: 35)",
                        "type": "string",
                        "example": "Declarant city"
                    },
                    "representative_address_country": {
                        "description": "The country where the Declarant is established The country where the Indirect customs representative is established The country where the Importer is established The country where the Indirect customs representative is established The country where the Importer is established (either a Member state of the EU or a third country). (either a Member state of the EU or a third country). (Min Length: 2, Max Length: 2)",
                        "type": "string",
                        "example": "BE"
                    },
                    "representative_identification_number": {
                        "description": "The Representative's Economic Operators Registration and Identification The Representative's Economic Operators Registration and Identification (EORI) Number (EORI) Number (Min Length: 1, Max Length: 17)",
                        "type": "string",
                        "example": "IT293847584930295"
                    },
                    "representative_name": {
                        "description": "The full name The full name (person or company) of the Indirect customs representative. (person or company) of the Indirect customs representative. (Min Length: 1, Max Length: 70)",
                        "type": "string",
                        "example": "Representative CBAM"
                    },
                    "supporting_documents": {
                        "description": "(max-occurs=99)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/flat.SupportingDocumentsType"
                        }
                    },
                    "updatedAt": {
                        "description": "Last update time",
                        "type": "string"
                    },
                    "updatedBy": {
                        "description": "Updater identifier",
                        "type": "string"
                    },
                    "version": {
                        "description": "Report Versions",
                        "type": "string"
                    }
                }
            },
            "flat.ImportedQuantityType": {
                "description": "Summary of Struct",
                "type": "object",
                "required": [
                    "additional_information",
                    "import_area",
                    "item_number",
                    "measure_procedure_imported",
                    "requested_proc"
                ],
                "properties": {
                    "additional_information": {
                        "description": "Additional Information (Min Length: 1, Max Length: 512)",
                        "type": "string",
                        "example": "Special references for goods"
                    },
                    "companyID": {
                        "description": "Company identifier",
                        "type": "integer"
                    },
                    "createdAt": {
                        "description": "Creation time",
                        "type": "string"
                    },
                    "import_area": {
                        "description": "The area where the CBAM Good was imported. Two possible values: EU by means of Customs import declaration and EU by other means. (Min Length: 1, Max Length: 5)",
                        "type": "string",
                        "example": "EU"
                    },
                    "internalReportID": {
                        "description": "Internal report ID",
                        "type": "integer"
                    },
                    "inward_processing_info": {
                        "description": "(max-occurs=999)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/flat.InwardProcessingInfoType"
                        }
                    },
                    "item_number": {
                        "description": "Import Good Item Number, sequencial This element specifies the item number of every CBAM Good imported of the CBAM Report. It is a sequential number starting at 1. (1,2..)",
                        "type": "string",
                        "example": "1"
                    },
                    "measure_procedure_imported": {
                        "description": "(max-occurs=2)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/flat.MeasureProcedureType"
                        }
                    },
                    "organizationID": {
                        "description": "Organization identifier",
                        "type": "integer"
                    },
                    "requested_proc": {
                        "description": "The Customs Requested Procedure. (Min Length: 2, Max Length: 2)",
                        "type": "string",
                        "example": "44"
                    },
                    "sequence_number": {
                        "description": "This element specifies the number of every CBAM Good emission. It is a sequential number starting at 1. (Pattern: \\d{1,5})",
                        "type": "integer",
                        "example": 1
                    },
                    "updatedAt": {
                        "description": "Last update time",
                        "type": "string"
                    },
                    "updatedBy": {
                        "description": "Updater identifier",
                        "type": "string"
                    },
                    "version": {
                        "description": "Report Versions",
                        "type": "string"
                    }
                }
            },
            "flat.InstallationOperatorType": {
                "description": "Summary of Struct",
                "type": "object",
                "required": [
                    "city",
                    "contact_details",
                    "country",
                    "operator_id",
                    "operator_name"
                ],
                "properties": {
                    "city": {
                        "description": "The city where the Declarant is located. The city where the Declarant is located. The city where the importer is located. The city where the Declarant is located. The city where the importer is located. The city where the operator is located. (Min Length: 1, Max Length: 35)",
                        "type": "string",
                        "example": "Declarant city"
                    },
                    "contact_details": {
                        "description": "(max-occurs=9)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/flat.ContactDetailsType"
                        }
                    },
                    "country": {
                        "description": "The country where the Declarant is established The country where the Indirect customs representative is established The country where the Importer is established The country where the Indirect customs representative is established The country where the Importer is established (either a Member state of the EU or a third country). (either a Member state of the EU or a third country). (Min Length: 2, Max Length: 2)",
                        "type": "string",
                        "example": "BE"
                    },
                    "operator_id": {
                        "description": "The unique identification number of the operator. (Min Length: 1, Max Length: 25)",
                        "type": "string",
                        "example": "OP04-0001"
                    },
                    "operator_name": {
                        "description": "The Name of the operator. (Min Length: 1, Max Length: 70)",
                        "type": "string",
                        "example": "TR Steel Operator LTD"
                    }
                }
            },
            "flat.InstallationType": {
                "description": "Summary of Struct",
                "type": "object",
                "required": [
                    "city",
                    "establishment_country",
                    "installation_id",
                    "installation_name"
                ],
                "properties": {
                    "city": {
                        "description": "The city where the installation is located. (Min Length: 1, Max Length: 35)",
                        "type": "string",
                        "example": "Istanbul"
                    },
                    "establishment_country": {
                        "description": "The country where the installation that produced the good or the Declarant is established. (Min Length: 2, Max Length: 2)",
                        "type": "string",
                        "example": "TR"
                    },
                    "installation_id": {
                        "description": "The unique ID of the Installation. (Min Length: 1, Max Length: 20)",
                        "type": "string",
                        "example": "IN03"
                    },
                    "installation_name": {
                        "description": "The name of the Installation. (Min Length: 1, Max Length: 256)",
                        "type": "string",
                        "example": "Augusta Steel INC"
                    }
                }
            },
            "flat.InwardProcessingInfoType": {
                "description": "Summary of Struct",
                "type": "object",
                "required": [
                    "authorisation",
                    "deadline",
                    "discharge_bill_waiver",
                    "end_time",
                    "member_state_auth",
                    "start_time"
                ],
                "properties": {
                    "authorisation": {
                        "description": "The Authorisation related to the inward processing. (Min Length: 1, Max Length: 512)",
                        "type": "string"
                    },
                    "deadline": {
                        "description": "The deadline for the submission of the Bill of discharge. Typically it will be one month after the end date of the Globalisation timer. (Total Digits: 8)",
                        "type": "integer"
                    },
                    "discharge_bill_waiver": {
                        "description": "The Inward processing waiver for the Bill of discharge. (Total Digits: 1)",
                        "type": "integer"
                    },
                    "end_time": {
                        "description": "The end date of the Globalisation timer. (Total Digits: 8)",
                        "type": "integer"
                    },
                    "member_state_auth": {
                        "description": "The Member State which authorised the inward processing. (Min Length: 2, Max Length: 2)",
                        "type": "string"
                    },
                    "start_time": {
                        "description": "The start date of the Globalisation timer. (Total Digits: 8)",
                        "type": "integer"
                    }
                }
            },
            "flat.MeasureProcedureType": {
                "description": "Summary of Struct",
                "type": "object",
                "required": [
                    "indicator",
                    "measurement_unit"
                ],
                "properties": {
                    "indicator": {
                        "description": "The procedure indicator. Inward Processing = 1, Other = 0 (Total Digits: 1)",
                        "type": "integer",
                        "example": 0
                    },
                    "measurement_unit": {
                        "description": "The type of measurement unit of the quantity of the CBAM Good. (Min Length: 1, Max Length: 5)",
                        "type": "string",
                        "example": "01"
                    }
                }
            },
            "flat.ProdMethodQualifyingParamsType": {
                "description": "Summary of Struct",
                "type": "object",
                "required": [
                    "method_id",
                    "method_name",
                    "year"
                ],
                "properties": {
                    "additional_information": {
                        "description": "Additional Information (Min Length: 1, Max Length: 512)",
                        "type": "string"
                    },
                    "companyID": {
                        "description": "Company identifier",
                        "type": "integer"
                    },
                    "createdAt": {
                        "description": "Creation time",
                        "type": "string"
                    },
                    "internalReportID": {
                        "description": "Internal report ID",
                        "type": "integer"
                    },
                    "method_id": {
                        "description": "The unique identity of the production method. (Min Length: 1, Max Length: 5)",
                        "type": "string",
                        "example": "P45"
                    },
                    "method_name": {
                        "description": "The production method name. (Min Length: 1, Max Length: 256)",
                        "type": "string",
                        "example": "Aluminium products"
                    },
                    "modification_date": {
                        "description": "(Min Length: 1, Max Length: 35)",
                        "type": "string"
                    },
                    "organizationID": {
                        "description": "Organization identifier",
                        "type": "integer"
                    },
                    "sequence_number": {
                        "description": "Production method sequence number (Pattern: \\d{1,5})",
                        "type": "integer",
                        "example": 1
                    },
                    "steel_mill_number": {
                        "description": "Specific steel mill identification number (Min Length: 1, Max Length: 256)",
                        "type": "string",
                        "example": "Steel Mill Identification Number"
                    },
                    "updatedAt": {
                        "description": "Last update time",
                        "type": "string"
                    },
                    "updatedBy": {
                        "description": "Updater identifier",
                        "type": "string"
                    },
                    "version": {
                        "description": "Report Versions",
                        "type": "string"
                    },
                    "year": {
                        "description": "(Total Digits: 4)",
                        "type": "integer",
                        "example": 0
                    }
                }
            },
            "flat.QReportType": {
                "description": "Summary of Struct",
                "type": "object",
                "required": [
                    "additional_information",
                    "declarant_actor_address_city",
                    "declarant_actor_address_country",
                    "declarant_identification_number",
                    "declarant_name",
                    "importer_address_city",
                    "importer_address_country",
                    "importer_identification_number",
                    "importer_name",
                    "reporting_period",
                    "representative_address_city",
                    "representative_address_country",
                    "representative_identification_number",
                    "representative_name",
                    "role",
                    "signatures",
                    "year"
                ],
                "properties": {
                    "additional_information": {
                        "description": "Additional Information Additional Information (Min Length: 1, Max Length: 512)",
                        "type": "string",
                        "example": "Goods' additional information"
                    },
                    "companyID": {
                        "description": "Company identifier",
                        "type": "integer"
                    },
                    "createdAt": {
                        "description": "Creation time",
                        "type": "string"
                    },
                    "declarant_actor_address_city": {
                        "description": "The city where the Declarant is located. The city where the Declarant is located. The city where the importer is located. The city where the Declarant is located. The city where the importer is located. The city where the operator is located. (Min Length: 1, Max Length: 35)",
                        "type": "string",
                        "example": "Declarant city"
                    },
                    "declarant_actor_address_country": {
                        "description": "The country where the Declarant is established The country where the Indirect customs representative is established The country where the Importer is established The country where the Indirect customs representative is established The country where the Importer is established (either a Member state of the EU or a third country). (either a Member state of the EU or a third country). (Min Length: 2, Max Length: 2)",
                        "type": "string",
                        "example": "BE"
                    },
                    "declarant_identification_number": {
                        "description": "The Declarant's Economic Operators Registration and Identification (EORI) Number (Min Length: 1, Max Length: 17)",
                        "type": "string",
                        "example": "BE1457893"
                    },
                    "declarant_name": {
                        "description": "The full name (person or company) of the Declarant. (Min Length: 1, Max Length: 70)",
                        "type": "string",
                        "example": "Declarant CBAM"
                    },
                    "importer_address_city": {
                        "description": "The city where the Declarant is located. The city where the Declarant is located. The city where the importer is located. The city where the Declarant is located. The city where the importer is located. The city where the operator is located. (Min Length: 1, Max Length: 35)",
                        "type": "string",
                        "example": "Declarant city"
                    },
                    "importer_address_country": {
                        "description": "The country where the Declarant is established The country where the Indirect customs representative is established The country where the Importer is established The country where the Indirect customs representative is established The country where the Importer is established (either a Member state of the EU or a third country). (either a Member state of the EU or a third country). (Min Length: 2, Max Length: 2)",
                        "type": "string",
                        "example": "BE"
                    },
                    "importer_identification_number": {
                        "description": "The Importer's Economic Operators Registration and Identification The Importer's Economic Operators Registration and Identification (EORI) Number (EORI) Number (Min Length: 1, Max Length: 17)",
                        "type": "string",
                        "example": "GR293847584930295"
                    },
                    "importer_name": {
                        "description": "The full name The full name (person or company) of the importer. (person or company) of the importer. (Min Length: 1, Max Length: 70)",
                        "type": "string",
                        "example": "Declarant CBAM"
                    },
                    "internalReportID": {
                        "description": "Internal report ID",
                        "type": "integer"
                    },
                    "organizationID": {
                        "description": "Organization identifier",
                        "type": "integer"
                    },
                    "reporting_period": {
                        "description": "The Quarter of the year. (Q1,Q2,Q3,Q4) (Min Length: 2, Max Length: 2)",
                        "type": "string",
                        "example": "Q3"
                    },
                    "representative_address_city": {
                        "description": "The city where the Declarant is located. The city where the Declarant is located. The city where the importer is located. The city where the Declarant is located. The city where the importer is located. The city where the operator is located. (Min Length: 1, Max Length: 35)",
                        "type": "string",
                        "example": "Declarant city"
                    },
                    "representative_address_country": {
                        "description": "The country where the Declarant is established The country where the Indirect customs representative is established The country where the Importer is established The country where the Indirect customs representative is established The country where the Importer is established (either a Member state of the EU or a third country). (either a Member state of the EU or a third country). (Min Length: 2, Max Length: 2)",
                        "type": "string",
                        "example": "BE"
                    },
                    "representative_identification_number": {
                        "description": "The Representative's Economic Operators Registration and Identification The Representative's Economic Operators Registration and Identification (EORI) Number (EORI) Number (Min Length: 1, Max Length: 17)",
                        "type": "string",
                        "example": "IT293847584930295"
                    },
                    "representative_name": {
                        "description": "The full name The full name (person or company) of the Indirect customs representative. (person or company) of the Indirect customs representative. (Min Length: 1, Max Length: 70)",
                        "type": "string",
                        "example": "Representative CBAM"
                    },
                    "role": {
                        "description": "The role that the Declarant has. If they are the importer or a Indirect customs representative. (Min Length: 1, Max Length: 5)",
                        "type": "string",
                        "example": "01"
                    },
                    "signatures": {
                        "description": "()",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/flat.SignaturesType"
                            }
                        ]
                    },
                    "submission_date": {
                        "description": "The submission date of the report. (Pattern: \\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\dZ)",
                        "type": "string",
                        "example": "2023-08-08T08:21:14Z"
                    },
                    "updatedAt": {
                        "description": "Last update time",
                        "type": "string"
                    },
                    "updatedBy": {
                        "description": "Updater identifier",
                        "type": "string"
                    },
                    "version": {
                        "description": "Report Versions",
                        "type": "string"
                    },
                    "year": {
                        "description": "The year for which the report is submitted. (Total Digits: 4)",
                        "type": "integer",
                        "example": 2024
                    }
                }
            },
            "flat.QualifyingParametersType": {
                "description": "Summary of Struct",
                "type": "object",
                "required": [
                    "item_number",
                    "parameter_id",
                    "parameter_name",
                    "parameter_value",
                    "parameter_value_type"
                ],
                "properties": {
                    "additional_information": {
                        "description": "Additional Information In this element, the Declarant can write any additional information that applies in the location where this is positioned. (Min Length: 1, Max Length: 512)",
                        "type": "string"
                    },
                    "companyID": {
                        "description": "Company identifier",
                        "type": "integer"
                    },
                    "createdAt": {
                        "description": "Creation time",
                        "type": "string"
                    },
                    "description": {
                        "description": "A text element to describe the parameter A text element to describe the parameter (Min Length: 1, Max Length: 256)",
                        "type": "string",
                        "example": "Tonnes scrap used for producing 1 t of the product (total scrap including post-consumer scrap)"
                    },
                    "internalReportID": {
                        "description": "Internal report ID",
                        "type": "integer"
                    },
                    "item_number": {
                        "description": "Import Good Item Number, sequencial This element specifies the item number of every CBAM Good imported of the CBAM Report. It is a sequential number starting at 1. This element specifies the item number of every CBAM Good imported of the CBAM Report. It is a sequential number starting at 1. (1,2..)",
                        "type": "string",
                        "example": "1"
                    },
                    "organizationID": {
                        "description": "Organization identifier",
                        "type": "integer"
                    },
                    "parameter_id": {
                        "description": "ID of the parameter used ID of the parameter used (Min Length: 1, Max Length: 5)",
                        "type": "string",
                        "example": "QPD21"
                    },
                    "parameter_name": {
                        "description": "Name of the parameter used Name of the parameter used (Min Length: 1, Max Length: 256)",
                        "type": "string",
                        "example": "Aluminium scrap usage"
                    },
                    "parameter_value": {
                        "description": "The actual value of the parameter The actual value of the parameter (Min Length: 1, Max Length: 256)",
                        "type": "string",
                        "example": "9"
                    },
                    "parameter_value_type": {
                        "description": "The type of the parameter The type of the parameter (e.g., Percentage, numeric, text) (e.g., Percentage, numeric, text) (Min Length: 1, Max Length: 256)",
                        "type": "string",
                        "example": "NUMERIC"
                    },
                    "sequence_number": {
                        "description": "The sequential number of the parameter The sequential number of the parameter (Pattern: \\d{1,5})",
                        "type": "integer",
                        "example": 1
                    },
                    "updatedAt": {
                        "description": "Last update time",
                        "type": "string"
                    },
                    "updatedBy": {
                        "description": "Updater identifier",
                        "type": "string"
                    },
                    "version": {
                        "description": "Report Versions",
                        "type": "string"
                    }
                }
            },
            "flat.RemarksEmissionsType": {
                "description": "Summary of Struct",
                "type": "object",
                "required": [
                    "additional_information"
                ],
                "properties": {
                    "additional_information": {
                        "description": "Any additional information (Min Length: 1, Max Length: 512)",
                        "type": "string",
                        "example": "Additional information"
                    },
                    "sequence_number": {
                        "description": "Remarks sequence number (Pattern: \\d{1,5})",
                        "type": "integer",
                        "example": 0
                    }
                }
            },
            "flat.SignaturesType": {
                "description": "Summary of Struct",
                "type": "object",
                "required": [
                    "global_data_confirmation",
                    "other_applicable_reporting_methodology",
                    "position_of_person_sending",
                    "signature",
                    "signature_place",
                    "use_of_data_confirmation"
                ],
                "properties": {
                    "global_data_confirmation": {
                        "description": "This element holds the confirmation of the Declarant regarding the information of the CBAM Report. ()",
                        "type": "boolean",
                        "example": true
                    },
                    "other_applicable_reporting_methodology": {
                        "description": "This element is used to hold the Position of the Declarant ()",
                        "type": "boolean",
                        "example": true
                    },
                    "position_of_person_sending": {
                        "description": "This element is used to hold the full name of the Declarant. (Min Length: 1, Max Length: 128)",
                        "type": "string",
                        "example": "Position of person signing"
                    },
                    "signature": {
                        "description": "This element holds the place where the confirmation was signed. (Min Length: 1, Max Length: 128)",
                        "type": "string",
                        "example": "Signature (Full Name)"
                    },
                    "signature_place": {
                        "description": "This element holds the date when the confirmation was signed. (Min Length: 1, Max Length: 128)",
                        "type": "string",
                        "example": "Place of signature"
                    },
                    "use_of_data_confirmation": {
                        "description": "This element holds the confirmation of the Declarant regarding his approval to use the data of the CBAM Report for the review process. ()",
                        "type": "boolean",
                        "example": true
                    }
                }
            },
            "flat.SupportingDocumentsType": {
                "description": "Summary of Struct",
                "type": "object",
                "required": [
                    "binary",
                    "document_type",
                    "filename",
                    "item_number",
                    "mime",
                    "type"
                ],
                "properties": {
                    "binary": {
                        "description": "The actual binary object. The actual binary object. ()",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "companyID": {
                        "description": "Company identifier",
                        "type": "integer"
                    },
                    "country": {
                        "description": "The country where the supporting document was issued. The country where the supporting document was issued. (Min Length: 2, Max Length: 2)",
                        "type": "string",
                        "example": "CA"
                    },
                    "createdAt": {
                        "description": "Creation time",
                        "type": "string"
                    },
                    "description": {
                        "description": "A text element to describe the supporting document. A text element to describe the supporting document. (Min Length: 1, Max Length: 256)",
                        "type": "string",
                        "example": "Description"
                    },
                    "document_type": {
                        "description": "Document type",
                        "type": "string",
                        "enum": [
                            "GENERAL",
                            "EMISSIONS"
                        ]
                    },
                    "filename": {
                        "description": "The file name of the attachment. The file name of the attachment. (Min Length: 1, Max Length: 256)",
                        "type": "string",
                        "example": "Supporting_document_01.docx"
                    },
                    "internalReportID": {
                        "description": "Internal report ID",
                        "type": "integer"
                    },
                    "issuing_auth_name": {
                        "description": "The authority that issued the supporting document. The authority that issued the supporting document. (Min Length: 1, Max Length: 70)",
                        "type": "string",
                        "example": "Issuing authority name"
                    },
                    "item_number": {
                        "description": "Import Good Item Number, sequencial This element specifies the item number of every CBAM Good imported of the CBAM Report. It is a sequential number starting at 1. (1,2..)",
                        "type": "string",
                        "example": "1"
                    },
                    "line_item_number": {
                        "description": "The document line item number is the number of the Goods imported entry in which the supporting documents corresponding to. The document line item number is the number of the Goods imported entry in which the supporting documents corresponding to. (Pattern: \\d{1,5})",
                        "type": "integer",
                        "example": 88888
                    },
                    "mime": {
                        "description": "The MIME of the attachment. The MIME of the attachment. (Min Length: 1, Max Length: 71)",
                        "type": "string",
                        "example": "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                    },
                    "organizationID": {
                        "description": "Organization identifier",
                        "type": "integer"
                    },
                    "reference_number": {
                        "description": "The reference number of the supporting document. The reference number of the supporting document. (Min Length: 1, Max Length: 70)",
                        "type": "string",
                        "example": "01 Reference number"
                    },
                    "sequence_number": {
                        "description": "Supporting document sequence number. (Pattern: \\d{1,5})",
                        "type": "integer",
                        "example": 1
                    },
                    "type": {
                        "description": "The type of supporting document This element is used to define the type of emissions document that is declared. It is in the Supporting Documents (for emissions definition). (it is in the Supporting Documents (for Goods)). (Min Length: 4, Max Length: 4)",
                        "type": "string",
                        "example": "01"
                    },
                    "updatedAt": {
                        "description": "Last update time",
                        "type": "string"
                    },
                    "updatedBy": {
                        "description": "Updater identifier",
                        "type": "string"
                    },
                    "uri": {
                        "description": "The URI link of an attachment. The URI link of an attachment. (Min Length: 1, Max Length: 2048)",
                        "type": "string"
                    },
                    "validity_end_date": {
                        "description": "The end date of validity of the supporting document. The end date of validity of the supporting document. (Pattern: \\d{4}-\\d\\d-\\d\\d)",
                        "type": "string",
                        "example": "1/1/24"
                    },
                    "validity_start_date": {
                        "description": "The start date of validity of the supporting document. The start date of validity of the supporting document. (Pattern: \\d{4}-\\d\\d-\\d\\d)",
                        "type": "string",
                        "example": "1/1/24"
                    },
                    "version": {
                        "description": "Report Versions",
                        "type": "string"
                    }
                }
            },
            "models.Customer": {
                "type": "object",
                "properties": {
                    "email": {
                        "description": "Customer email address",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique identifier for the customer",
                        "type": "string"
                    },
                    "name": {
                        "description": "Customer name",
                        "type": "string"
                    }
                }
            },
            "models.ForecastSetting": {
                "description": "Forecast Setting defines configuration parameters.",
                "type": "object",
                "properties": {
                    "carbonPrice": {
                        "description": "Carbon price.",
                        "type": "number",
                        "example": 15
                    },
                    "discount": {
                        "description": "Discount rate.",
                        "type": "number",
                        "example": 0.1
                    },
                    "importRegion": {
                        "description": "Region for the settings.",
                        "type": "string",
                        "enum": [
                            "EU"
                        ],
                        "example": "EU"
                    },
                    "reportingPeriod": {
                        "description": "Reporting period.",
                        "type": "string",
                        "example": "Q1"
                    },
                    "year": {
                        "description": "Year for the settings.",
                        "type": "integer",
                        "example": 2023
                    },
                    "yoyChange": {
                        "description": "Year-over-year change.",
                        "type": "number",
                        "example": 0.05
                    }
                }
            },
            "models.GetCustomerResponse": {
                "type": "object",
                "properties": {
                    "customer": {
                        "description": "The customer record",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/models.Customer"
                            }
                        ]
                    }
                }
            },
            "models.GetImportedGoodsEmissionsResponse": {
                "description": "Returns emissions-related information that is required to calculate the carbon footprint for EU CBAM submissions.",
                "type": "object",
                "properties": {
                    "goodsEmissionsType": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/flat.GoodsEmissionsType"
                        }
                    },
                    "message": {
                        "description": "A detailed success message.",
                        "type": "string",
                        "example": "Operation completed successfully"
                    },
                    "status": {
                        "description": "HTTP status code.",
                        "type": "integer",
                        "example": 200
                    }
                }
            },
            "models.GetImportedGoodsGeneralResponse": {
                "description": "Contains a list of imported goods types, which are critical for assessing imported goods under the EU CBAM regulatory framework.",
                "type": "object",
                "properties": {
                    "importedGoodType": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/flat.ImportedGoodType"
                        }
                    },
                    "message": {
                        "description": "A detailed success message.",
                        "type": "string",
                        "example": "Operation completed successfully"
                    },
                    "status": {
                        "description": "HTTP status code.",
                        "type": "integer",
                        "example": 200
                    }
                }
            },
            "models.GetImportedGoodsQuantityResponse": {
                "description": "Provides detailed information on the quantities of imported goods subject to EU CBAM requirements.",
                "type": "object",
                "properties": {
                    "importedQuantityType": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/flat.ImportedQuantityType"
                        }
                    },
                    "message": {
                        "description": "A detailed success message.",
                        "type": "string",
                        "example": "Operation completed successfully"
                    },
                    "status": {
                        "description": "HTTP status code.",
                        "type": "integer",
                        "example": 200
                    }
                }
            },
            "models.GetProdMethodQualifyingParamsResponse": {
                "description": "Details the qualifying parameters of production methods for imported goods, supporting compliance verification within the EU CBAM framework.",
                "type": "object",
                "properties": {
                    "message": {
                        "description": "A detailed success message.",
                        "type": "string",
                        "example": "Operation completed successfully"
                    },
                    "prodMethodQualifyingParamsType": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/flat.ProdMethodQualifyingParamsType"
                        }
                    },
                    "status": {
                        "description": "HTTP status code.",
                        "type": "integer",
                        "example": 200
                    }
                }
            },
            "models.InternalServerErrorResponse": {
                "description": "A response indicating that an internal server error occurred.",
                "type": "object",
                "properties": {
                    "message": {
                        "description": "A detailed error message.",
                        "type": "string",
                        "example": "An internal server error occurred"
                    },
                    "status": {
                        "description": "HTTP status code.",
                        "type": "integer",
                        "example": 500
                    }
                }
            },
            "models.JSONPayloadErrorResponse": {
                "description": "A response indicating that the JSON payload is invalid.",
                "type": "object",
                "properties": {
                    "message": {
                        "description": "A detailed error message.",
                        "type": "string",
                        "example": "The JSON payload is invalid"
                    },
                    "status": {
                        "description": "HTTP status code.",
                        "type": "integer",
                        "example": 400
                    }
                }
            },
            "models.ListCustomerResponse": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "Total number of customers returned",
                        "type": "integer"
                    },
                    "customers": {
                        "description": "Slice of customer records",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/models.Customer"
                        }
                    }
                }
            },
            "models.SuccessResponse": {
                "description": "A standard successful API response.",
                "type": "object",
                "properties": {
                    "message": {
                        "description": "A detailed success message.",
                        "type": "string",
                        "example": "Operation completed successfully"
                    },
                    "status": {
                        "description": "HTTP status code.",
                        "type": "integer",
                        "example": 200
                    }
                }
            },
            "models.ValidationError": {
                "description": "Represents the details of a validation error.",
                "type": "object",
                "properties": {
                    "description": {
                        "description": "Short explanation",
                        "type": "string",
                        "example": "A value is required"
                    },
                    "field": {
                        "description": "The name of the field that failed validation",
                        "type": "string",
                        "example": "example_field"
                    },
                    "invalid_value": {
                        "description": "The invalid value provided for the field",
                        "type": "string",
                        "example": ""
                    },
                    "message": {
                        "description": "Human-readable error message",
                        "type": "string",
                        "example": "The exampleField is required"
                    },
                    "rule": {
                        "description": "Detailed validation rule",
                        "type": "string",
                        "example": "non-empty"
                    },
                    "tag": {
                        "description": "Validation rule or tag that failed",
                        "type": "string",
                        "example": "required"
                    }
                }
            },
            "models.ValidationErrorResponse": {
                "description": "A response containing validation errors for the provided data.",
                "type": "object",
                "properties": {
                    "message": {
                        "description": "A detailed error message.",
                        "type": "string",
                        "example": "Validation failed for the provided data"
                    },
                    "status": {
                        "description": "HTTP status code.",
                        "type": "integer",
                        "example": 422
                    },
                    "validation_errors": {
                        "description": "A list of validation errors.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/models.ValidationError"
                        }
                    }
                }
            }
        }
    }
}